//************************** Greenhouse Facility **************************
// Last Modified: 5/8/00

// The GreenhouseFacility class represents the greenhouses in a settlement.
// It defines the amount of fresh and dried foods generated by the greenhouses.

// Every settlement should have greenhouses.

public class GreenhouseFacility extends Facility {

	// Data members
	
	private float harvestAmount;           // Number of people greenhouse can support if tended.
	private float workLoad;                // Number of work-hours tending greenhouse required to generate a full harvest.
	private float workCompleted;           // Number of work-hours tending greenhouse completed for current harvest.
	private float harvestPeriod;           // Number of days between harvests.
	private float harvestPeriodCompleted;  // Number of days completed of current harvest period.
	private boolean harvestPeriodStarted;   // True if harvest cycle has been started.

	// Constructor for random creation.

	public GreenhouseFacility(FacilityManager manager) {
	
		// Use Facility's constructor.
		
		super(manager, "Greenhouse", "Greenhouse");
	
		// Initialize data members
		
		workLoad = 125F;
		workCompleted = 0F;
		harvestPeriod = 10F;
		harvestPeriodCompleted = 0F;
		harvestPeriodStarted = false;
	
		// Randomly determine harvest amount.
		
		harvestAmount = 10 + RandomUtil.getRandomInteger(20);
	}
	
	// Constructor for set values (used later when facilities can be built or upgraded.)
	
	public GreenhouseFacility(FacilityManager manager, float workLoad, float harvestPeriod, float harvestAmount) {
	
		// Use Facility's constructor.
		
		super(manager, "Greenhouse", "Greenhouse");
		
		// Initialize data members.
		
		this.workLoad = workLoad;
		this.harvestPeriod = harvestPeriod;
		this.harvestAmount = harvestAmount;
		workCompleted = 0F;
		harvestPeriodCompleted = 0F;
		harvestPeriodStarted = false;
	}
	
	// Returns the harvest amount of the greenhouse.
	
	public float getHarvestAmount() { return harvestAmount; }
	
	// Returns the work load of the greenhouse. (in work-hours)
	
	public float getWorkLoad() { return workLoad; }
	
	// Returns the harvest period of the greenhouse. (in days)
	
	public float getHarvestPeriod() { return workLoad; }
	
	// Returns the current work completed on the harvest. (in work-hours)
	
	public float getWorkCompleted() { return workCompleted; }
	
	// Returns the time completed of the current harvest cycle. (in days)
	
	public float getTimeCompleted() { return harvestPeriodCompleted; }
	
	// Returns true if a harvest cycle has been started.
	
	public boolean getHarvestPeriodStarted() { return harvestPeriodStarted; }
	
	// Adds work to the work completed on a harvest.
	
	public void addWorkToHarvest(int seconds) { workCompleted += ((float) seconds / 60F); }
	
	// Prepare next batch of seeds.
	
	public void startNewSeeds(int seconds) {
		workCompleted = ((float) seconds / 60F); 
		harvestPeriodCompleted = ((float) seconds / 60F);
		harvestPeriodStarted = true;
	}
	
	// Override Facility's timePasses method to allow for harvest cycle.
	
	public void timePasses(int seconds) { 	
		if (harvestPeriodStarted && (harvestPeriodCompleted < harvestPeriod)) 
			harvestPeriodCompleted += ((float) seconds / 60F); 
	}
}	

// Mars Simulation Project
// Copyright (C) 1999 Scott Davis
//
// For questions or comments on this project, contact:
//
// Scott Davis
// 1725 W. Timber Ridge Ln. #6206
// Oak Creek, WI  53154
// scud1@execpc.com
// http://www.execpc.com/~scud1/
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA