/**
 * Mars Simulation Project
 * PowerGrid.java
 * @version 2.75 2003-01-21
 * @author Scott Davis
 */
 
package org.mars_sim.msp.simulation.structure;
 
import java.io.Serializable;
import java.util.Iterator;
import org.mars_sim.msp.simulation.structure.building.*;
import org.mars_sim.msp.simulation.structure.building.function.PowerGeneration;
 
/**
 * The PowerGrid class is a settlement's building power grid.
 */
public class PowerGrid implements Serializable {
        
    // Data members
    private double powerGenerated;
    private double powerUsed;
    private Settlement settlement;
    
    /**
     * Constructor
     */
    public PowerGrid(Settlement settlement) {
        this.settlement = settlement;
        powerGenerated = 0D;;
        powerUsed = 0D;
    }
    
    /**
     * Gets the generated power in the grid.
     * @return power in kW
     */
    public double getGeneratedPower() {
        return powerGenerated;
    }
    
    /**
     * Gets the power used from the grid.
     * @return power in kW
     */
    public double getUsedPower() {
        return powerUsed;
    }
    
    /**
     * Time passing for power grid.
     *
     * @param time amount of time passing (in millisols)
     */
    public void timePassing(double time) {
        
        // Clear and recalculate power
        powerGenerated = 0D;
        powerUsed = 0D;
        
        BuildingManager manager = settlement.getBuildingManager();
        
        // Determine total power generated by buildings.
        Iterator iPow = manager.getBuildings(PowerGeneration.class);
        while (iPow.hasNext()) {
            PowerGeneration gen = (PowerGeneration) iPow.next();
            powerGenerated += gen.getGeneratedPower();
        }
        
        // Determine total power used by buildings.
        Iterator iUsed = manager.getBuildings();
        while (iUsed.hasNext()) {
            Building building = (Building) iUsed.next();
            powerUsed += building.getPowerUsed();
        }
    }  
}
